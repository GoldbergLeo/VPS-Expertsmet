"""
Django settings for expertsmet project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3wrrd9k!mpdp2lw7#wl&erzou7abtqewhf=@wyugl26qdmv-0_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'expertsmet.ru',
    '127.0.0.1', 
    'localhost',
    '0.0.0.0',  # Добавляем для локальной разработки
    '80.242.57.136',  # IP адрес сервера для тестирования
    'testserver',  # Для Django тестов
    # Поддомены городов - существующие
    'moscow.expertsmet.ru',
    'spb.expertsmet.ru', 
    'ekaterinburg.expertsmet.ru',
    'novosibirsk.expertsmet.ru',
    'nizhny-novgorod.expertsmet.ru',
    'kazan.expertsmet.ru',
    'chelyabinsk.expertsmet.ru',
    'krasnodar.expertsmet.ru',
    'krasnoyarsk.expertsmet.ru',
    'perm.expertsmet.ru',
    'rostov.expertsmet.ru',
    'samara.expertsmet.ru',
    'tyumen.expertsmet.ru',
    'ufa.expertsmet.ru',
    'volgograd.expertsmet.ru',
    # Поддомены новых городов
    'omsk.expertsmet.ru',
    'voronezh.expertsmet.ru',
    'saratov.expertsmet.ru',
    'irkutsk.expertsmet.ru',
    'novokuznetsk.expertsmet.ru',
    'barnaul.expertsmet.ru',
    'belgorod.expertsmet.ru',
    'bryansk.expertsmet.ru',
    'ivanovo.expertsmet.ru',
    'izhevsk.expertsmet.ru',
    'kaliningrad.expertsmet.ru',
    'kemerovo.expertsmet.ru',
    'kirov.expertsmet.ru',
    'kursk.expertsmet.ru',
    'lipetsk.expertsmet.ru',
    'magnitogorsk.expertsmet.ru',
    'makhachkala.expertsmet.ru',
    'nizhny-tagil.expertsmet.ru',
    'orenburg.expertsmet.ru',
    'penza.expertsmet.ru',
    'ryazan.expertsmet.ru',
    'sochi.expertsmet.ru',
    'stavropol.expertsmet.ru',
    'tver.expertsmet.ru',
    'tomsk.expertsmet.ru',
    'tolyatti.expertsmet.ru',
    'ulyanovsk.expertsmet.ru',
    'cheboksary.expertsmet.ru',
    'yaroslavl.expertsmet.ru',
    'vladikavkaz.expertsmet.ru',
    'arkhangelsk.expertsmet.ru',
    'astrakhan.expertsmet.ru',
    'tula.expertsmet.ru',
    # Wildcard для всех поддоменов (на продакшене)
    '.expertsmet.ru',
]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'main',
    'articles',
]

MIDDLEWARE = [
    'main.middleware.BlockBotsMiddleware',  # Блокировка ботов в начале
    'main.middleware.SubdomainMiddleware',  # Автоматическое определение поддомена
    'main.security_middleware.FormSecurityMiddleware',  # Защита форм от атак
    'main.security_middleware.RateLimitMiddleware',  # Ограничение частоты запросов
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'expertsmet.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.context_processors.cities_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'expertsmet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'main' / 'static',  # Добавляем путь к статическим файлам main приложения
]

STATIC_ROOT = BASE_DIR / 'staticfiles'



# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email настройки - импортируем из защищенного файла
try:
    from email_config import EMAIL_CONFIG
    EMAIL_BACKEND = 'main.email_backend.CustomEmailBackend'
    EMAIL_HOST = EMAIL_CONFIG['HOST']
    EMAIL_PORT = EMAIL_CONFIG['PORT']
    EMAIL_HOST_USER = EMAIL_CONFIG['USER']
    EMAIL_HOST_PASSWORD = EMAIL_CONFIG['PASSWORD']
    EMAIL_USE_SSL = EMAIL_CONFIG['USE_SSL']
    EMAIL_USE_TLS = EMAIL_CONFIG['USE_TLS']
    DEFAULT_FROM_EMAIL = EMAIL_CONFIG['USER']
except ImportError:
    # Fallback настройки (без пароля)
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    EMAIL_HOST = 'localhost'
    EMAIL_PORT = 1025
    EMAIL_HOST_USER = 'mail@expertsmet.ru'
    EMAIL_HOST_PASSWORD = ''
    EMAIL_USE_SSL = False
    EMAIL_USE_TLS = False
    DEFAULT_FROM_EMAIL = 'mail@expertsmet.ru'

# Дополнительные настройки для решения проблем с SSL
EMAIL_SSL_CERTFILE = None
EMAIL_SSL_KEYFILE = None
EMAIL_SSL_CERT_REQS = None

# Настройки для обхода проблем с SSL сертификатами
import ssl
EMAIL_SSL_CONTEXT = ssl.create_default_context()
EMAIL_SSL_CONTEXT.check_hostname = False
EMAIL_SSL_CONTEXT.verify_mode = ssl.CERT_NONE


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Security settings for production
CSRF_TRUSTED_ORIGINS = [
    'https://expertsmet.ru',
    'https://www.expertsmet.ru',
    'https://*.expertsmet.ru',
    'http://80.242.57.136',
    'http://80.242.57.136:8001',  # IP адрес сервера для тестирования
    'http://80.242.57.136:8080',  # IP адрес сервера через nginx
]

# Дополнительные настройки безопасности для форм
MAX_FORM_ATTEMPTS = 10  # Максимальное количество попыток отправки формы
FORM_LOCKOUT_TIME = 300  # Время блокировки в секундах (5 минут)
MAX_REQUESTS_PER_MINUTE = 30  # Максимальное количество запросов в минуту

# Настройки CSRF
CSRF_COOKIE_SECURE = True  # CSRF cookie только через HTTPS
CSRF_COOKIE_HTTPONLY = True  # CSRF cookie недоступен для JavaScript
CSRF_COOKIE_SAMESITE = 'Strict'  # CSRF cookie только для того же сайта
CSRF_USE_SESSIONS = True  # Хранить CSRF токен в сессии

# Настройки сессий
SESSION_COOKIE_SECURE = True  # Session cookie только через HTTPS
SESSION_COOKIE_HTTPONLY = True  # Session cookie недоступен для JavaScript
SESSION_COOKIE_SAMESITE = 'Strict'  # Session cookie только для того же сайта
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Сессия истекает при закрытии браузера

SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

# Static files optimization
# STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'maxBytes': 50*1024*1024,  # 50MB
            'backupCount': 5,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
